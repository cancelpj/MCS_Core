//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18444 版自动生成。
// 
#pragma warning disable 1591

namespace MCSApp.WSProcedureCtrl {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ProcedureCtrlSoap", Namespace="http://fingu.com/mcs")]
    public partial class ProcedureCtrl : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CheckModelOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckModelByBarCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RepairProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcedureChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckProcedureOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanDoNextOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFinishedProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveProcessPurelyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveProcessBeginOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveProcessEndOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTestingConfigurationOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ProcedureCtrl() {
            this.Url = global::MCSApp.Properties.Settings.Default.MCSApp_WSProcedureCtrl_ProcedureCtrl;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CheckModelCompletedEventHandler CheckModelCompleted;
        
        /// <remarks/>
        public event CheckModelByBarCodeCompletedEventHandler CheckModelByBarCodeCompleted;
        
        /// <remarks/>
        public event RepairProductCompletedEventHandler RepairProductCompleted;
        
        /// <remarks/>
        public event ProcedureChangedCompletedEventHandler ProcedureChangedCompleted;
        
        /// <remarks/>
        public event CheckProcedureCompletedEventHandler CheckProcedureCompleted;
        
        /// <remarks/>
        public event CanDoNextCompletedEventHandler CanDoNextCompleted;
        
        /// <remarks/>
        public event GetFinishedProcessCompletedEventHandler GetFinishedProcessCompleted;
        
        /// <remarks/>
        public event SaveProcessPurelyCompletedEventHandler SaveProcessPurelyCompleted;
        
        /// <remarks/>
        public event SaveProcessCompletedEventHandler SaveProcessCompleted;
        
        /// <remarks/>
        public event SaveProcessBeginCompletedEventHandler SaveProcessBeginCompleted;
        
        /// <remarks/>
        public event SaveProcessEndCompletedEventHandler SaveProcessEndCompleted;
        
        /// <remarks/>
        public event GetDataCompletedEventHandler GetDataCompleted;
        
        /// <remarks/>
        public event GetTestingConfigurationCompletedEventHandler GetTestingConfigurationCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fingu.com/mcs/CheckModel", RequestNamespace="http://fingu.com/mcs", ResponseNamespace="http://fingu.com/mcs", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckModel(string ModelID, string UID, int Flag) {
            object[] results = this.Invoke("CheckModel", new object[] {
                        ModelID,
                        UID,
                        Flag});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckModelAsync(string ModelID, string UID, int Flag) {
            this.CheckModelAsync(ModelID, UID, Flag, null);
        }
        
        /// <remarks/>
        public void CheckModelAsync(string ModelID, string UID, int Flag, object userState) {
            if ((this.CheckModelOperationCompleted == null)) {
                this.CheckModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckModelOperationCompleted);
            }
            this.InvokeAsync("CheckModel", new object[] {
                        ModelID,
                        UID,
                        Flag}, this.CheckModelOperationCompleted, userState);
        }
        
        private void OnCheckModelOperationCompleted(object arg) {
            if ((this.CheckModelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckModelCompleted(this, new CheckModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fingu.com/mcs/CheckModelByBarCode", RequestNamespace="http://fingu.com/mcs", ResponseNamespace="http://fingu.com/mcs", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckModelByBarCode(string BarCode, string UID, int Flag) {
            object[] results = this.Invoke("CheckModelByBarCode", new object[] {
                        BarCode,
                        UID,
                        Flag});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckModelByBarCodeAsync(string BarCode, string UID, int Flag) {
            this.CheckModelByBarCodeAsync(BarCode, UID, Flag, null);
        }
        
        /// <remarks/>
        public void CheckModelByBarCodeAsync(string BarCode, string UID, int Flag, object userState) {
            if ((this.CheckModelByBarCodeOperationCompleted == null)) {
                this.CheckModelByBarCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckModelByBarCodeOperationCompleted);
            }
            this.InvokeAsync("CheckModelByBarCode", new object[] {
                        BarCode,
                        UID,
                        Flag}, this.CheckModelByBarCodeOperationCompleted, userState);
        }
        
        private void OnCheckModelByBarCodeOperationCompleted(object arg) {
            if ((this.CheckModelByBarCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckModelByBarCodeCompleted(this, new CheckModelByBarCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fingu.com/mcs/RepairProduct", RequestNamespace="http://fingu.com/mcs", ResponseNamespace="http://fingu.com/mcs", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RepairProduct(string BarCode) {
            object[] results = this.Invoke("RepairProduct", new object[] {
                        BarCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RepairProductAsync(string BarCode) {
            this.RepairProductAsync(BarCode, null);
        }
        
        /// <remarks/>
        public void RepairProductAsync(string BarCode, object userState) {
            if ((this.RepairProductOperationCompleted == null)) {
                this.RepairProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRepairProductOperationCompleted);
            }
            this.InvokeAsync("RepairProduct", new object[] {
                        BarCode}, this.RepairProductOperationCompleted, userState);
        }
        
        private void OnRepairProductOperationCompleted(object arg) {
            if ((this.RepairProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RepairProductCompleted(this, new RepairProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fingu.com/mcs/ProcedureChanged", RequestNamespace="http://fingu.com/mcs", ResponseNamespace="http://fingu.com/mcs", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProcedureChanged(string BarCode) {
            object[] results = this.Invoke("ProcedureChanged", new object[] {
                        BarCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProcedureChangedAsync(string BarCode) {
            this.ProcedureChangedAsync(BarCode, null);
        }
        
        /// <remarks/>
        public void ProcedureChangedAsync(string BarCode, object userState) {
            if ((this.ProcedureChangedOperationCompleted == null)) {
                this.ProcedureChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcedureChangedOperationCompleted);
            }
            this.InvokeAsync("ProcedureChanged", new object[] {
                        BarCode}, this.ProcedureChangedOperationCompleted, userState);
        }
        
        private void OnProcedureChangedOperationCompleted(object arg) {
            if ((this.ProcedureChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcedureChangedCompleted(this, new ProcedureChangedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fingu.com/mcs/CheckProcedure", RequestNamespace="http://fingu.com/mcs", ResponseNamespace="http://fingu.com/mcs", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckProcedure(string BarCode, string Process, int BeginOrEnd, out string oMsg) {
            object[] results = this.Invoke("CheckProcedure", new object[] {
                        BarCode,
                        Process,
                        BeginOrEnd});
            oMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckProcedureAsync(string BarCode, string Process, int BeginOrEnd) {
            this.CheckProcedureAsync(BarCode, Process, BeginOrEnd, null);
        }
        
        /// <remarks/>
        public void CheckProcedureAsync(string BarCode, string Process, int BeginOrEnd, object userState) {
            if ((this.CheckProcedureOperationCompleted == null)) {
                this.CheckProcedureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckProcedureOperationCompleted);
            }
            this.InvokeAsync("CheckProcedure", new object[] {
                        BarCode,
                        Process,
                        BeginOrEnd}, this.CheckProcedureOperationCompleted, userState);
        }
        
        private void OnCheckProcedureOperationCompleted(object arg) {
            if ((this.CheckProcedureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckProcedureCompleted(this, new CheckProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fingu.com/mcs/CanDoNext", RequestNamespace="http://fingu.com/mcs", ResponseNamespace="http://fingu.com/mcs", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanDoNext(string BarCode, string Process) {
            object[] results = this.Invoke("CanDoNext", new object[] {
                        BarCode,
                        Process});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanDoNextAsync(string BarCode, string Process) {
            this.CanDoNextAsync(BarCode, Process, null);
        }
        
        /// <remarks/>
        public void CanDoNextAsync(string BarCode, string Process, object userState) {
            if ((this.CanDoNextOperationCompleted == null)) {
                this.CanDoNextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanDoNextOperationCompleted);
            }
            this.InvokeAsync("CanDoNext", new object[] {
                        BarCode,
                        Process}, this.CanDoNextOperationCompleted, userState);
        }
        
        private void OnCanDoNextOperationCompleted(object arg) {
            if ((this.CanDoNextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanDoNextCompleted(this, new CanDoNextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fingu.com/mcs/GetFinishedProcess", RequestNamespace="http://fingu.com/mcs", ResponseNamespace="http://fingu.com/mcs", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetFinishedProcess(string BarCode) {
            object[] results = this.Invoke("GetFinishedProcess", new object[] {
                        BarCode});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFinishedProcessAsync(string BarCode) {
            this.GetFinishedProcessAsync(BarCode, null);
        }
        
        /// <remarks/>
        public void GetFinishedProcessAsync(string BarCode, object userState) {
            if ((this.GetFinishedProcessOperationCompleted == null)) {
                this.GetFinishedProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFinishedProcessOperationCompleted);
            }
            this.InvokeAsync("GetFinishedProcess", new object[] {
                        BarCode}, this.GetFinishedProcessOperationCompleted, userState);
        }
        
        private void OnGetFinishedProcessOperationCompleted(object arg) {
            if ((this.GetFinishedProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFinishedProcessCompleted(this, new GetFinishedProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fingu.com/mcs/SaveProcessPurely", RequestNamespace="http://fingu.com/mcs", ResponseNamespace="http://fingu.com/mcs", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveProcessPurely(string BarCode, string Process, string EmployeeID, int Result, string Exception, string Data, System.DateTime BeginTime, System.DateTime EndTime, out string oMsg) {
            object[] results = this.Invoke("SaveProcessPurely", new object[] {
                        BarCode,
                        Process,
                        EmployeeID,
                        Result,
                        Exception,
                        Data,
                        BeginTime,
                        EndTime});
            oMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveProcessPurelyAsync(string BarCode, string Process, string EmployeeID, int Result, string Exception, string Data, System.DateTime BeginTime, System.DateTime EndTime) {
            this.SaveProcessPurelyAsync(BarCode, Process, EmployeeID, Result, Exception, Data, BeginTime, EndTime, null);
        }
        
        /// <remarks/>
        public void SaveProcessPurelyAsync(string BarCode, string Process, string EmployeeID, int Result, string Exception, string Data, System.DateTime BeginTime, System.DateTime EndTime, object userState) {
            if ((this.SaveProcessPurelyOperationCompleted == null)) {
                this.SaveProcessPurelyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveProcessPurelyOperationCompleted);
            }
            this.InvokeAsync("SaveProcessPurely", new object[] {
                        BarCode,
                        Process,
                        EmployeeID,
                        Result,
                        Exception,
                        Data,
                        BeginTime,
                        EndTime}, this.SaveProcessPurelyOperationCompleted, userState);
        }
        
        private void OnSaveProcessPurelyOperationCompleted(object arg) {
            if ((this.SaveProcessPurelyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveProcessPurelyCompleted(this, new SaveProcessPurelyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fingu.com/mcs/SaveProcess", RequestNamespace="http://fingu.com/mcs", ResponseNamespace="http://fingu.com/mcs", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveProcess(string BarCode, string Process, string EmployeeID, int Result, string Exception, string Data, System.DateTime BeginTime, System.DateTime EndTime, out string oMsg) {
            object[] results = this.Invoke("SaveProcess", new object[] {
                        BarCode,
                        Process,
                        EmployeeID,
                        Result,
                        Exception,
                        Data,
                        BeginTime,
                        EndTime});
            oMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveProcessAsync(string BarCode, string Process, string EmployeeID, int Result, string Exception, string Data, System.DateTime BeginTime, System.DateTime EndTime) {
            this.SaveProcessAsync(BarCode, Process, EmployeeID, Result, Exception, Data, BeginTime, EndTime, null);
        }
        
        /// <remarks/>
        public void SaveProcessAsync(string BarCode, string Process, string EmployeeID, int Result, string Exception, string Data, System.DateTime BeginTime, System.DateTime EndTime, object userState) {
            if ((this.SaveProcessOperationCompleted == null)) {
                this.SaveProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveProcessOperationCompleted);
            }
            this.InvokeAsync("SaveProcess", new object[] {
                        BarCode,
                        Process,
                        EmployeeID,
                        Result,
                        Exception,
                        Data,
                        BeginTime,
                        EndTime}, this.SaveProcessOperationCompleted, userState);
        }
        
        private void OnSaveProcessOperationCompleted(object arg) {
            if ((this.SaveProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveProcessCompleted(this, new SaveProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fingu.com/mcs/SaveProcessBegin", RequestNamespace="http://fingu.com/mcs", ResponseNamespace="http://fingu.com/mcs", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveProcessBegin(string BarCode, string Process, string EmployeeID, System.DateTime BeginTime, out string oMsg) {
            object[] results = this.Invoke("SaveProcessBegin", new object[] {
                        BarCode,
                        Process,
                        EmployeeID,
                        BeginTime});
            oMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveProcessBeginAsync(string BarCode, string Process, string EmployeeID, System.DateTime BeginTime) {
            this.SaveProcessBeginAsync(BarCode, Process, EmployeeID, BeginTime, null);
        }
        
        /// <remarks/>
        public void SaveProcessBeginAsync(string BarCode, string Process, string EmployeeID, System.DateTime BeginTime, object userState) {
            if ((this.SaveProcessBeginOperationCompleted == null)) {
                this.SaveProcessBeginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveProcessBeginOperationCompleted);
            }
            this.InvokeAsync("SaveProcessBegin", new object[] {
                        BarCode,
                        Process,
                        EmployeeID,
                        BeginTime}, this.SaveProcessBeginOperationCompleted, userState);
        }
        
        private void OnSaveProcessBeginOperationCompleted(object arg) {
            if ((this.SaveProcessBeginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveProcessBeginCompleted(this, new SaveProcessBeginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fingu.com/mcs/SaveProcessEnd", RequestNamespace="http://fingu.com/mcs", ResponseNamespace="http://fingu.com/mcs", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveProcessEnd(string BarCode, string Process, int Result, string Exception, string Data, System.DateTime EndTime, out string oMsg) {
            object[] results = this.Invoke("SaveProcessEnd", new object[] {
                        BarCode,
                        Process,
                        Result,
                        Exception,
                        Data,
                        EndTime});
            oMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveProcessEndAsync(string BarCode, string Process, int Result, string Exception, string Data, System.DateTime EndTime) {
            this.SaveProcessEndAsync(BarCode, Process, Result, Exception, Data, EndTime, null);
        }
        
        /// <remarks/>
        public void SaveProcessEndAsync(string BarCode, string Process, int Result, string Exception, string Data, System.DateTime EndTime, object userState) {
            if ((this.SaveProcessEndOperationCompleted == null)) {
                this.SaveProcessEndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveProcessEndOperationCompleted);
            }
            this.InvokeAsync("SaveProcessEnd", new object[] {
                        BarCode,
                        Process,
                        Result,
                        Exception,
                        Data,
                        EndTime}, this.SaveProcessEndOperationCompleted, userState);
        }
        
        private void OnSaveProcessEndOperationCompleted(object arg) {
            if ((this.SaveProcessEndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveProcessEndCompleted(this, new SaveProcessEndCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fingu.com/mcs/GetData", RequestNamespace="http://fingu.com/mcs", ResponseNamespace="http://fingu.com/mcs", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetData(string BarCode, string Process) {
            object[] results = this.Invoke("GetData", new object[] {
                        BarCode,
                        Process});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataAsync(string BarCode, string Process) {
            this.GetDataAsync(BarCode, Process, null);
        }
        
        /// <remarks/>
        public void GetDataAsync(string BarCode, string Process, object userState) {
            if ((this.GetDataOperationCompleted == null)) {
                this.GetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOperationCompleted);
            }
            this.InvokeAsync("GetData", new object[] {
                        BarCode,
                        Process}, this.GetDataOperationCompleted, userState);
        }
        
        private void OnGetDataOperationCompleted(object arg) {
            if ((this.GetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fingu.com/mcs/GetTestingConfiguration", RequestNamespace="http://fingu.com/mcs", ResponseNamespace="http://fingu.com/mcs", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTestingConfiguration(string ConfigurationName) {
            object[] results = this.Invoke("GetTestingConfiguration", new object[] {
                        ConfigurationName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTestingConfigurationAsync(string ConfigurationName) {
            this.GetTestingConfigurationAsync(ConfigurationName, null);
        }
        
        /// <remarks/>
        public void GetTestingConfigurationAsync(string ConfigurationName, object userState) {
            if ((this.GetTestingConfigurationOperationCompleted == null)) {
                this.GetTestingConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTestingConfigurationOperationCompleted);
            }
            this.InvokeAsync("GetTestingConfiguration", new object[] {
                        ConfigurationName}, this.GetTestingConfigurationOperationCompleted, userState);
        }
        
        private void OnGetTestingConfigurationOperationCompleted(object arg) {
            if ((this.GetTestingConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTestingConfigurationCompleted(this, new GetTestingConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CheckModelCompletedEventHandler(object sender, CheckModelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CheckModelByBarCodeCompletedEventHandler(object sender, CheckModelByBarCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckModelByBarCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckModelByBarCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RepairProductCompletedEventHandler(object sender, RepairProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RepairProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RepairProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ProcedureChangedCompletedEventHandler(object sender, ProcedureChangedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcedureChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcedureChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CheckProcedureCompletedEventHandler(object sender, CheckProcedureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CanDoNextCompletedEventHandler(object sender, CanDoNextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanDoNextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanDoNextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFinishedProcessCompletedEventHandler(object sender, GetFinishedProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFinishedProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFinishedProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveProcessPurelyCompletedEventHandler(object sender, SaveProcessPurelyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveProcessPurelyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveProcessPurelyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveProcessCompletedEventHandler(object sender, SaveProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveProcessBeginCompletedEventHandler(object sender, SaveProcessBeginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveProcessBeginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveProcessBeginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveProcessEndCompletedEventHandler(object sender, SaveProcessEndCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveProcessEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveProcessEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDataCompletedEventHandler(object sender, GetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTestingConfigurationCompletedEventHandler(object sender, GetTestingConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTestingConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTestingConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591